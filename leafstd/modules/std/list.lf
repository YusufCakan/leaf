fn len list ([a] -> int)
  builtin:len list

fn get i list (int [a] -> a)
  builtin:get i list

fn remove i list (int [a] -> [a])
  if len list == 0 
    then list 
    else builtin:remove i list

fn head list ([a] -> a) 
  get 0 list
fn tail list ([a] -> a) 
  get << len list - 1

fn take n list (int [a] -> [a])
  if n < 1
    then list
    else head list |> take (n - 1) << remove 0 list

fn map f list ((a -> b) [a] -> [b]) 
  if len list == 0
    then list
    else (f << head list) |> map #f (remove 0 list)
